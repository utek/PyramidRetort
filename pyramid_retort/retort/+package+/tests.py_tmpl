import unittest
import transaction

from pyramid import testing

from .models import DBSession


class TestMyView(unittest.TestCase):
    def setUp(self):
        self.config = testing.setUp()
        from sqlalchemy import create_engine
        engine = create_engine('sqlite://')
        from .models import (
            Base,
            User,
            )
        DBSession.configure(bind=engine)
        Base.metadata.create_all(engine)
        with transaction.manager:
            model = User(username='one', password='test')
            DBSession.add(model)
            DBSession.flush()
            self.id = model.id


    def tearDown(self):
        DBSession.remove()
        testing.tearDown()

    def test_it(self):
        # from .views import my_view
        # request = testing.DummyRequest()
        # info = my_view(request)
        from .models import User
        user = User.by_username("one")
        self.assertEqual(user.username, "one")
        self.assertEqual(user.check_password("test"), True)
        self.assertEqual(user.id, self.id)


class TestUserModel(unittest.TestCase):

    def test_password(self):
        from .models import User
        password = "test"
        model = User(username="pass", password=password)
        self.assertEqual(model.check_password(password), True)
