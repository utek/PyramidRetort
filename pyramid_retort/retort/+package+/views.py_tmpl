import datetime

from pyramid.response import Response
from pyramid.view import view_config

from pyramid.httpexceptions import (
    HTTPNotFound,
    HTTPFound,
    HTTPForbidden
)

from pyramid.security import (
    remember,
    forget,
    authenticated_userid
)

from .models import (
    DBSession,
    User
)

from .forms import (
    LoginForm
)


@view_config(route_name='home', renderer='index.mako')
def my_view(request):
    return {}
    
@view_config(route_name='auth', match_param='action=in', renderer='string',
             request_method='POST')
@view_config(route_name='auth', match_param='action=out', renderer='string')
def sign_in_out(request):
    form = LoginForm(request.POST)
    if request.method == 'POST':
        if form.validate():
            username = form.username.data
            password = form.password.data
            user = User.by_username(username)
            if user and user.check_password(password):
                headers = remember(request, user.username)
                loc = request.session.pop("next", request.route_url('home'))
                user.last_logged = datetime.datetime.utcnow()
                return HTTPFound(loc, headers=headers)
            else:
                headers = forget(request)
                request.session.flash('Bad username or password', 'errors')
        else:
            headers = forget(request)
            request.session.flash('Invalid data in login form', 'errors')
    else:
        headers = forget(request)
        request.session.flash("You've sucessfully singed out", 'info')
    return HTTPFound(location=request.route_url('home'),
                     headers=headers)
